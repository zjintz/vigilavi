# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    app.admin.emailsubscription:
        class: App\Admin\EmailSubscriptionAdmin
        arguments: [~, App\Entity\EmailSubscription, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: EmailSubscription }
        calls:
            - [ setTranslationDomain, [messages]]
            
    app.admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Application\Sonata\UserBundle\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: User }
        calls:
            - [ setTranslationDomain, [messages]]

    app.admin.headquarter:
        class: App\Admin\HeadquarterAdmin
        arguments: [~, App\Entity\Headquarter, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Headquarter }

    app.admin.word:
        class: App\Admin\WordAdmin
        arguments: [~, App\Entity\Word, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Word }
        calls:
            - [ setTranslationDomain, [messages]]
    app.admin.word_set:
        class: App\Admin\WordSetAdmin
        arguments: [~, App\Entity\WordSet, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: WordSet }
        calls:
            - [ setTranslationDomain, [messages]]
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
